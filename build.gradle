plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id 'org.web3j' version '4.5.0'
}

group 'dsx'
version '1.0-SNAPSHOT'

repositories {
    jcenter()
}

web3j {
    generatedPackageName = 'org.web3j.sample.contracts.generated'
    excludedContracts = ['Mortal']
}

ext {
    web3jVersion = '4.5.0'
    logbackVersion = '1.2.3'
}

dependencies {
    //compile 'org.web3j: core: 4.5.5'
    implementation "org.web3j:core:4.5.0",
            "ch.qos.logback:logback-core:1.2.3",
            "ch.qos.logback:logback-classic:1.2.3"
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "io.reactivex.rxjava2:rxkotlin:2.3.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.10"
    implementation "com.uchuhimo:konf:0.20.0"
    implementation "com.uchuhimo:konf-yaml:0.20.0"


    testCompile "org.junit.jupiter:junit-jupiter-api:5.3.2"
    testCompile "org.junit.jupiter:junit-jupiter-params:5.3.2"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.2"
    testCompile "org.mockito:mockito-core:3.1.0"
    testCompile "org.mockito:mockito-junit-jupiter:3.1.0"
    testImplementation 'org.mockito:mockito-inline:3.1.0'


}

sourceSets {
    testIntegration {
        java.srcDir 'src/testIntegration/java'
        kotlin.srcDir 'src/testIntegration/kotlin'
        resources.srcDir 'src/testIntegration/resources'
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}