CREATE TABLE IF NOT EXISTS CRYPTOADDRESS (ID SERIAL PRIMARY KEY, TYPE INT NOT NULL, ADDRESS VARCHAR(100) NOT NULL, CURRENCY INT NOT NULL);
CREATE TABLE IF NOT EXISTS DEPOSITACCOUNT (ID SERIAL PRIMARY KEY, "depositAccountId" VARCHAR(100) NOT NULL);
CREATE TABLE IF NOT EXISTS DEPOSITADDRESS (ID SERIAL PRIMARY KEY, "cryptoAddressId" INT NOT NULL, "depositAccountId" INT NOT NULL,
CONSTRAINT FK_DEPOSITADDRESS_CRYPTOADDRESSID_ID FOREIGN KEY ("cryptoAddressId") REFERENCES CRYPTOADDRESS(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
CONSTRAINT FK_DEPOSITADDRESS_DEPOSITACCOUNTID_ID FOREIGN KEY ("depositAccountId") REFERENCES DEPOSITACCOUNT(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS ENABLEDCURRENCY (ID SERIAL PRIMARY KEY, CURRENCY INT NOT NULL, "depositAccountId" INT NOT NULL,
CONSTRAINT FK_ENABLEDCURRENCY_DEPOSITACCOUNTID_ID FOREIGN KEY ("depositAccountId") REFERENCES DEPOSITACCOUNT(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS PAYMENT (ID SERIAL PRIMARY KEY, STATUS INT NOT NULL, FEE DECIMAL(30, 15) NULL, "paymentId" VARCHAR(100) NOT NULL, AMOUNT DECIMAL(30, 15) NOT NULL,
TAG VARCHAR(100) NULL, "cryptoAddressId" INT NOT NULL, CONSTRAINT FK_PAYMENT_CRYPTOADDRESSID_ID FOREIGN KEY ("cryptoAddressId") REFERENCES CRYPTOADDRESS(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS INVOICE (ID SERIAL PRIMARY KEY, STATUS INT NOT NULL, RECEIVED DECIMAL(30, 15) NOT NULL, "invoiceId" VARCHAR(100) NOT NULL, AMOUNT DECIMAL(30, 15) NOT NULL,
TAG VARCHAR(100) NULL, "cryptoAddressId" INT NOT NULL, CONSTRAINT FK_INVOICE_CRYPTOADDRESSID_ID FOREIGN KEY ("cryptoAddressId") REFERENCES CRYPTOADDRESS(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS TX (ID SERIAL PRIMARY KEY, STATUS INT NOT NULL, TAG VARCHAR(4096) NULL, AMOUNT DECIMAL(30, 15) NOT NULL, FEE DECIMAL(30, 15) NOT NULL, HASH VARCHAR(500) NOT NULL, INDEX BIGINT NOT NULL, "cryptoAddressId" INT NOT NULL, CONSTRAINT FK_TX_CRYPTOADDRESSID_ID FOREIGN KEY ("cryptoAddressId") REFERENCES CRYPTOADDRESS(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS BTCTX (ID SERIAL PRIMARY KEY, CONFIRMATIONS INT NOT NULL, ADDRESS VARCHAR(100) NOT NULL, "TxId" INT NOT NULL,
CONSTRAINT FK_BTCTX_TXID_ID FOREIGN KEY ("TxId") REFERENCES TX(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS TRXTX (ID SERIAL PRIMARY KEY, ADDRESS VARCHAR(100) NOT NULL, "TxId" INT NOT NULL,
CONSTRAINT FK_TRXTX_TXID_ID FOREIGN KEY ("TxId") REFERENCES TX(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS CONTRACTRET (ID SERIAL PRIMARY KEY, "contractRet" VARCHAR(100) NOT NULL, "TrxTable" INT NOT NULL,
CONSTRAINT FK_CONTRACTRET_TRXTABLE_ID FOREIGN KEY ("TrxTable") REFERENCES TRXTX(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS XRPTX (ID SERIAL PRIMARY KEY, FEE DECIMAL(30, 15) NOT NULL, ACCOUNT VARCHAR(50) NOT NULL, SEQUENCE INT NOT NULL, VALIDATED BOOLEAN NULL,
"TxId" INT NOT NULL, CONSTRAINT FK_XRPTX_TXID_ID FOREIGN KEY ("TxId") REFERENCES TX(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS GRMINMSG (ID SERIAL PRIMARY KEY, "sourceAddress" VARCHAR(1024) NOT NULL, DESTINATION VARCHAR(1024) NOT NULL, VALUE BIGINT NOT NULL, "fwdFee" BIGINT NOT NULL, "ihrFee" BIGINT NOT NULL, "createdLt" BIGINT NOT NULL, "bodyHash" VARCHAR(1024) NOT NULL, "msgText" VARCHAR(4096) NOT NULL);
CREATE TABLE IF NOT EXISTS GRMTX (ID SERIAL PRIMARY KEY, UTIME BIGINT NOT NULL, "inMsg" INT NOT NULL, "TxId" INT NOT NULL,
CONSTRAINT FK_GRMTX_INMSG_ID FOREIGN KEY ("inMsg") REFERENCES GRMINMSG(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
CONSTRAINT FK_GRMTX_TXID_ID FOREIGN KEY ("TxId") REFERENCES TX(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);
ALTER TABLE GRMTX ADD CONSTRAINT GRMTX_INMSG_UNIQUE UNIQUE ("inMsg");
ALTER TABLE GRMTX ADD CONSTRAINT GRMTX_TXID_UNIQUE UNIQUE ("TxId");
CREATE TABLE IF NOT EXISTS GRMOUTMSG (ID SERIAL PRIMARY KEY, "grmTx" INT NOT NULL,
CONSTRAINT FK_GRMOUTMSG_GRMTX_ID FOREIGN KEY ("grmTx") REFERENCES GRMTX(ID) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS GRMQUERYINFO (ID SERIAL PRIMARY KEY, "queryId" BIGINT NOT NULL, "validUntil" BIGINT NOT NULL, "bodyHash" VARCHAR(1024) NOT NULL);
